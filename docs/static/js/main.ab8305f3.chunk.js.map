{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","GifGridItem","props","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAKlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCLhBG,EAAc,SAACC,GAGxB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMG,IAAKC,IAAKJ,EAAMK,QAChC,4BAAIL,EAAMK,Y,uBCRTC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbL,EADa,0FAEkEM,UAAUF,IAF5E,SAGAG,MAAMP,GAHN,cAGbQ,EAHa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRZ,MAAOW,EAAIX,MACXF,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAXnB,kBAeZW,GAfY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBxC,OAdAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GAAD,OACrBC,YAAW,WACTJ,EACE,CACEV,KAAMa,EACNL,SAAS,MAIf,UAED,CAACd,IAEGe,EDjB2BM,CAAarB,GAAjCW,EADyB,EAC/BL,KAAcQ,EADiB,EACjBA,QAGtB,OACE,qCACE,6BAAKd,IACJc,GAAW,oBAAIpB,UAAU,mCAAd,yBACZ,oBAAIA,UAAU,YAAd,SACGiB,EAAOH,KAAI,SAACC,GAET,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEiB1BY,EA5BM,WAAI,MAIe3C,mBAAS,CAAC,QAJzB,mBAId4C,EAJc,KAIF7C,EAJE,KAYrB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACK6C,EAAWf,KAAI,SAACR,GACd,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnBxCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ab8305f3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n      setInputValue(e.target.value)\r\n  };\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n\r\n    if(inputValue.trim().length > 2){\r\n\r\n        setCategories(categorias => [inputValue,...categorias]);\r\n        setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={props.url} alt={props.title}/>\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?api_key=TxBh3UltW4HdgZ0P6jvslbKmARdSXz0m&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","import React, { useState, useEffect } from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <h3 className=\"animate__animated animate__flash\">Cargando...</h3>}\r\n      <ol className=\"card-grid\">\r\n        {images.map((img) => {\r\n          {\r\n            return <GifGridItem key={img.id} {...img} />;\r\n          }\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setTimeout(() => {\r\n        setstate(\r\n          {\r\n            data: imgs,\r\n            loading: false,\r\n          }\r\n        );\r\n      },\r\n      2000)\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React,{useState} from 'react';\r\nimport {AddCategory} from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n\r\n    // const categories = ['uno','dos','tres']\r\n    const [categories, setCategories] = useState(['uno']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     const newCategory= 'cuatro';\r\n\r\n    //     setCategories([...categories,newCategory]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {categories.map((category)=>{\r\n                   return <GifGrid key={category} category={category}/>\r\n                  \r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}